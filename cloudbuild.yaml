# A Cloud Build configuration file for building and deploying a Kubeflow pipeline.

# This section configures the logs bucket, which is required when using a
# custom service account for the build.
options:
  default_logs_bucket_behavior: REGIONAL_USER_OWNED_BUCKET
logs_bucket: 'gs://63621516867-us-central1-cloudbuild-logs'

# The steps below perform the following tasks:
# 1. Fetches GKE cluster credentials and creates the Kubeconfig file.
# 2. Builds a Docker image containing the Kubeflow pipeline components.
# 3. Compiles the Kubeflow pipeline Python script into a YAML file using the custom image.
# 4. Uploads the compiled pipeline YAML to the Kubeflow Pipelines UI using the new kubectl builder.
steps:
- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:latest'
  entrypoint: 'bash'
  args:
  - '-c'
  - |
    # Get the credentials for the GKE cluster and store them in the Kubeconfig file.
    # Cloud Build automatically installs the necessary auth plugin in this step.
    gcloud container clusters get-credentials "${_CLUSTER_NAME}" \
      --zone "${_ZONE}" \
      --project "${_PROJECT_ID}"

- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-t', 'gcr.io/${_PROJECT_ID}/kubeflow-pipeline-components:latest', '.']

- name: 'gcr.io/${_PROJECT_ID}/kubeflow-pipeline-components:latest'
  entrypoint: 'python3'
  args: ['pipeline.py']
  env:
  - 'KUBECONFIG=/builder/home/.kube/config'

- name: 'gcr.io/cloud-builders/kubectl'
  args:
  - '--kubeconfig=/builder/home/.kube/config'
  - 'apply'
  - '-f'
  - 'healthcare_ml_pipeline.yaml'
  env:
  - 'KUBECONFIG=/builder/home/.kube/config'

# This section lists the Docker images to be pushed to Google Container Registry.
images:
- 'gcr.io/${_PROJECT_ID}/kubeflow-pipeline-components:latest'

# This section defines the substitution variables used in the steps.
# You can override these variables when you trigger the build.
substitutions:
  _PROJECT_ID: advance-replica-466713-n7
  _CLUSTER_NAME: kubeflow-healthcare-cluster
  _ZONE: us-central1-a
