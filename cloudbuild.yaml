steps:
# Step 0: Get credentials for the GKE cluster.
- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:latest'
  entrypoint: 'bash'
  args:
  - '-c'
  - |
    gcloud container clusters get-credentials "${_CLUSTER_NAME}" \
      --zone "${_ZONE}" \
      --project "${_PROJECT_ID}"

# Step 1: Build the Docker image.
- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-t', 'gcr.io/${_PROJECT_ID}/kubeflow-pipeline-components:latest', '.']

# Step 2: Run the Python script to compile the Kubeflow pipeline.
# The KUBECONFIG environment variable is passed to allow authentication.
- name: 'gcr.io/${_PROJECT_ID}/kubeflow-pipeline-components:latest'
  entrypoint: 'python3'
  args: ['pipeline.py']
  env:
  - 'KUBECONFIG=/builder/home/.kube/config'

# Step 3: Upload the compiled pipeline to the Kubeflow Pipelines UI.
# The KUBECONFIG environment variable is passed to allow authentication.
- name: 'gcr.io/${_PROJECT_ID}/kubeflow-pipeline-components:latest'
  entrypoint: 'kfp'
  args:
  - 'pipeline'
  - 'upload'
  - '--pipeline-package'
  - 'healthcare_ml_pipeline.yaml'
  - '--pipeline-name'
  - 'healthcare-data-ml-pipeline'
  env:
  - 'KUBECONFIG=/builder/home/.kube/config'
