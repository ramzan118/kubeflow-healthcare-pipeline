# This configuration file is for Google Cloud Build.
# It builds a Docker image, runs a Python script to compile a pipeline,
# and then applies it to a Kubeflow cluster.

# This option resolves the "if 'build.service_account' is specified..." error
# for 2nd gen triggers.
options:
  default_logs_bucket_behavior: REGIONAL_USER_OWNED_BUCKET

steps:
# Step 1: Get credentials for the GKE cluster
# This is crucial for subsequent kubectl commands.
- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  entrypoint: 'bash'
  args:
  - '-c'
  - |
    gcloud container clusters get-credentials "${_CLUSTER_NAME}" \
      --zone "${_ZONE}" \
      --project "${_PROJECT_ID}"

# Step 2: Build and push the Docker image
# This combines the build and push into a single step.
- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-t', 'gcr.io/${_PROJECT_ID}/kubeflow-pipeline-components:latest', '.']

# Step 3: Run the Python script to compile the Kubeflow pipeline
# This assumes 'pipeline.py' is in the root directory.
- name: 'python'
  entrypoint: 'python3'
  args: ['pipeline.py']

# Step 4: Apply the compiled pipeline to Kubeflow
# This assumes the 'healthcare_ml_pipeline.yaml' file is created by the python script.
- name: 'gcr.io/cloud-builders/kubectl'
  args:
  - 'apply'
  - '-f'
  - 'healthcare_ml_pipeline.yaml'
  env:
  - 'KUBECONFIG=/builder/home/.kube/config'

# This section lists the images to be pushed to Container Registry
images:
- 'gcr.io/${_PROJECT_ID}/kubeflow-pipeline-components:latest'

# This section defines the substitution variables.
# The values are now set to your specific project and cluster details.
substitutions:
  _PROJECT_ID: advance-replica-466713-n7
  _CLUSTER_NAME: kubeflow-healthcare-cluster
  _ZONE: us-central1-a
